// ---------------------------------------------------------------------------

// random-number generator parameters
SEED = 0                                 // RNG seed (0 for clock)

// ---------------------------------------------------------------------------

// physical parameters
kT  = 1.0                                // temperature
MU  = 1.0                                // viscosity (shear)
RHO = 0.0                                // density

// ---------------------------------------------------------------------------

// fluctuation parameters
STD_U = 1.0                              // scaling of velocity fluctuations (<<1 linearizes the fluctuations)

// ---------------------------------------------------------------------------

// discretization parameters
DT         = 0.1                        // time step size
N_STEPS    = 200                         // number of time steps
H          = 10.0                        // grid spacing
NX         = 8                          // number of grid cells (x axis)
NY         = 8                          // number of grid cells (y axis)
NZ         = 8                          // number of grid cells (z axis)
PERIODIC_X = 1
PERIODIC_Y = 1
PERIODIC_Z = 1

// ---------------------------------------------------------------------------

// solver parameters
DELTA_FUNCTION      = "IB_4"             // "IB_3","IB_4",or "IB_6"
START_TIME          = 0.0e0              // initial simulation time
END_TIME            = N_STEPS*DT         // final simulation time
GROW_DT             = 1.0e0              // growth factor for timesteps
NUM_CYCLES          = 1                  // number of cycles of fixed-point iteration
TS_TYPE             = "MIDPOINT_RULE"      // Time step method for IBSimpleHierarchyIntegrator
USE_RFD             = TRUE               // include the RFD term?  defaults to true
DYNAMICS            = "OVERDAMPED"
VISCOUS_TS_TYPE     = "BACKWARD_EULER"   // viscous time stepping rule
CREEPING_FLOW       = TRUE               // whether to use the creeping Stokes equations (no v*grad(v) term)
CONVECTIVE_TS_TYPE  = "TRAPEZOIDAL_RULE" // convective time stepping rule (if NUM_CYCLES>1)
CONVECTIVE_OP_TYPE  = "CENTERED"         // convective differencing discretization type
CONVECTIVE_FORM     = "CONSERVATIVE"     // how to compute the convective terms
NORMALIZE_PRESSURE  = TRUE               // whether to explicitly force the pressure to have mean zero
NORMALIZE_VELOCITY  = TRUE               // Enforce <u> = 0
CFL_MAX             = 100.5              // maximum CFL number
ERROR_ON_DT_CHANGE  = TRUE               // whether to emit an error message if the time step size changes
VORTICITY_TAGGING   = FALSE              // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER          = 1                  // size of tag buffer used by grid generation algorithm
REGRID_CFL_INTERVAL = 0                  // regrid every REGRID_INTERVAL steps
REGRID_INTERVAL     = 1                  // regrid every step
REGRID_ALPHA        = 1.5                // what portion of a cell width is a particle allowed to move between regrids
DIAGNOSTIC_INTERVAL = 10

// ---------------------------------------------------------------------------

// output parameters
OUTPUT_LEVEL = 1                         // -1=none,0=txt,1=silo+txt,2=visit+silo+txt,3=visit+SAMRAI+silo+txt,>3=verbose
VISIT_DUMP_INTERVAL = 10                 // how often to write Eulerian   viz files (if OUTPUT_LEVEL> 0)
DATA_DUMP_INTERVAL  = 10                 // how often to write Lagrangian viz files (if OUTPUT_LEVEL>=0)
OUTPUT_U            = TRUE
OUTPUT_P            = FALSE
OUTPUT_F            = FALSE
OUTPUT_OMEGA        = FALSE
OUTPUT_DIV_U        = FALSE
ENABLE_LOGGING      = TRUE

// ---------------------------------------------------------------------------

CartesianGeometry {
   domain_boxes = [ (0,0,0),(NX - 1,NY - 1,NZ - 1) ]
   x_lo = 0   ,0   ,0
   x_up = NX*H,NY*H,NZ*H
   periodic_dimension = PERIODIC_X,PERIODIC_Y,PERIODIC_Z
}

GriddingAlgorithm {
   max_levels = 1
   largest_patch_size {
      level_0 = 512,512,512
   }
   smallest_patch_size {
      level_0 =   8,  8,  8
   }
}

IBHierarchyIntegrator {
   time_stepping_type  = TS_TYPE
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   regrid_interval     = REGRID_INTERVAL
   dt_max              = DT
   error_on_dt_change  = ERROR_ON_DT_CHANGE
   tag_buffer          = TAG_BUFFER
   enable_logging      = ENABLE_LOGGING
   diagnostic_interval = DIAGNOSTIC_INTERVAL
   physical_rho        = 1.0

   // determines whether to normalize forces and apply wall forces
   normalize_force     = PERIODIC_X*PERIODIC_Y*PERIODIC_Z

   regrid_alpha        = REGRID_ALPHA
   use_rfd             = USE_RFD
}

IBMethod {
   min_ghost_cell_width = 2.0*REGRID_ALPHA
   delta_fcn      = DELTA_FUNCTION
   enable_logging = ENABLE_LOGGING
}

IBStandardInitializer {
   max_levels      = 1
   structure_names = "points3d_suspension"
   points3d_suspension {
      level_number = 0
   }
}

INSStaggeredHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   viscous_time_stepping_type    = VISCOUS_TS_TYPE
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   creeping_flow                 = CREEPING_FLOW
   normalize_pressure            = NORMALIZE_PRESSURE
   normalize_velocity            = NORMALIZE_VELOCITY
   cfl                           = CFL_MAX
   dt_max                        = DT
   using_vorticity_tagging       = VORTICITY_TAGGING
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING

   // Stokes solver configuration
   stokes_solver_type   = "PETSC_KRYLOV_SOLVER"
   stokes_precond_type  = "PROJECTION_PRECONDITIONER"

   // velocity (momentum) subdomain solver configuration
   velocity_solver_type = "HYPRE_LEVEL_SOLVER"
   velocity_solver_db {
      solver_type       = "Split"
      split_solver_type = "PFMG"
      max_iterations    = 1
   }

   // pressure subdomain solver configuration
   pressure_solver_type = "HYPRE_LEVEL_SOLVER"
   pressure_solver_db {
      solver_type          = "PFMG"
      num_pre_relax_steps  = 1
      num_post_relax_steps = 1
      max_iterations       = 1
   }
}

INSStaggeredStochasticForcing {
   stress_tensor_type  = "SYMMETRIC"
   velocity_bc_scaling = sqrt(2.0)
   traction_bc_scaling = 0.0
   std                 = STD_U * sqrt(kT)
   num_rand_vals       = 1
   weights_0           = 1.0
   weights_1           = 1.0
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

Main {
// log file parameters
   log_file_name               = "IB3d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt"
   viz_dump_interval           = VISIT_DUMP_INTERVAL
   viz_dump_dirname            = "viz_IB3d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_IB3d"

// postprocessing data dump parameters
   data_dump_interval          = DATA_DUMP_INTERVAL
   data_dump_dirname           = "data_IB3d"

// timer dump parameters
   timer_dump_interval         = 0
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

TimerManager{
   print_exclusive = FALSE
   print_total     = TRUE
   print_threshold = 0.1
   timer_list      = "IBAMR::*::*","IBTK::*::*","*::*::*"
}

// For purely periodic BCs the information below is not used.

// The input below sets zero velocity boundaries along nonperiodic
// dimensions.

VelocityBcCoefs_0 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"
   acoef_function_4 = "1.0"
   acoef_function_5 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"
   bcoef_function_4 = "0.0"
   bcoef_function_5 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
   gcoef_function_4 = "0.0"
   gcoef_function_5 = "0.0"
}

VelocityBcCoefs_1 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"
   acoef_function_4 = "1.0"
   acoef_function_5 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"
   bcoef_function_4 = "0.0"
   bcoef_function_5 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
   gcoef_function_4 = "0.0"
   gcoef_function_5 = "0.0"
}

VelocityBcCoefs_2 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"
   acoef_function_4 = "1.0"
   acoef_function_5 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"
   bcoef_function_4 = "0.0"
   bcoef_function_5 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
   gcoef_function_4 = "0.0"
   gcoef_function_5 = "0.0"
}

PointForceFunction{
   function_0 = "0.0"
   function_1 = "0.0"
   function_2 = "0.0"
}


NonbondedForceEvaluator{
	regrid_alpha = REGRID_ALPHA
	interaction_radius = 1.0 // Specified in cells.
	parameters = 2.0, 0.001
}

Walls {
    wall_number = 0
}

